{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup-board\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport { getUserFromToken, removeUserToken, setUserToken } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchUser = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userId = getUserFromToken(token);\n          // const user = await getUserById(userId);\n          console.log(userId);\n          // console.log(user);\n          setUser(userId);\n        } catch (error) {\n          console.error('Error fetching user:', error);\n          removeUserToken(); // Clear token if user fetch fails\n          setUser(null);\n        }\n      }\n    };\n    fetchUser();\n  }, []);\n  const login = async token => {\n    setUserToken(token);\n    try {\n      const userId = getUserFromToken(token);\n      // const user = await getUserById(userId);\n      console.log(user.name);\n      setUser(userId); // Update user state after successful login\n      console.log('User logged in:', user); // Check user data after successful login\n    } catch (error) {\n      console.error('Error logging in:', error);\n      removeUserToken(); // Clear token if login fails\n      setUser(null);\n    }\n  };\n  const logout = () => {\n    removeUserToken();\n    setUser(null); // Clear user state on logout\n    console.log('User logged out');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getUserFromToken","removeUserToken","setUserToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","fetchUser","token","localStorage","getItem","userId","console","log","error","login","name","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/startup-board/frontend/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport { getUserFromToken, removeUserToken, setUserToken } from '../services/authService';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const userId  = getUserFromToken(token);\r\n          // const user = await getUserById(userId);\r\n          console.log(userId);\r\n          // console.log(user);\r\n          setUser(userId);\r\n        } catch (error) {\r\n          console.error('Error fetching user:', error);\r\n          removeUserToken(); // Clear token if user fetch fails\r\n          setUser(null);\r\n        }\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const login = async (token) => {\r\n    setUserToken(token);\r\n    try {\r\n      const  userId  = getUserFromToken(token);\r\n      // const user = await getUserById(userId);\r\n      console.log(user.name);\r\n      setUser(userId); // Update user state after successful login\r\n      console.log('User logged in:', user); // Check user data after successful login\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n      removeUserToken(); // Clear token if login fails\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    removeUserToken();\r\n    setUser(null); // Clear user state on logout\r\n    console.log('User logged out');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,gBAAgB,EAAEC,eAAe,EAAEC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1F,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,MAAM,GAAIf,gBAAgB,CAACY,KAAK,CAAC;UACvC;UACAI,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;UACnB;UACAL,OAAO,CAACK,MAAM,CAAC;QACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5CjB,eAAe,CAAC,CAAC,CAAC,CAAC;UACnBS,OAAO,CAAC,IAAI,CAAC;QACf;MACF;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,KAAK,GAAG,MAAOP,KAAK,IAAK;IAC7BV,YAAY,CAACU,KAAK,CAAC;IACnB,IAAI;MACF,MAAOG,MAAM,GAAIf,gBAAgB,CAACY,KAAK,CAAC;MACxC;MACAI,OAAO,CAACC,GAAG,CAACR,IAAI,CAACW,IAAI,CAAC;MACtBV,OAAO,CAACK,MAAM,CAAC,CAAC,CAAC;MACjBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAER,IAAI,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCjB,eAAe,CAAC,CAAC,CAAC,CAAC;MACnBS,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBpB,eAAe,CAAC,CAAC;IACjBS,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;IACfM,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAChC,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,IAAI;MAAEU,KAAK;MAAEE;IAAO,CAAE;IAAAd,QAAA,EAClDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CAjDWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}