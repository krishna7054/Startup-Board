{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup-board\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// LoginPage.js\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [pro, setpro] = useState({});\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`http://localhost:5000/users/login`, formData);\n      console.log('User logged in:', response.data);\n\n      // Assuming server sends back a JWT token in response.data.token\n      const token = response.data.token;\n\n      // Use the login function from AuthContext to handle token and user state\n      await login(token);\n\n      // Redirect user based on their role\n      const pro = response.data.user.profession;\n      setpro(pro);\n      console.log('Role received:', pro); // Log the role received from the server\n      switch (response.data.user.profession) {\n        // Ensure lowercase comparison for consistent checks\n        case 'founder':\n          navigate('/AllStartups');\n          break;\n        case 'investor':\n          navigate('/AllInvestors');\n          break;\n        case 'visitor':\n          navigate('/VisitorDashboard');\n          break;\n        default:\n          console.error('Unknown Role:', response.data.role);\n        // Log the unknown role for further investigation\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"86d9Kdq9VL92zTnblkRx6Bypzh0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","axios","useNavigate","AuthContext","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","pro","setpro","login","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","token","user","profession","error","role","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/startup-board/frontend/src/pages/LoginPage.js"],"sourcesContent":["// LoginPage.js\r\nimport React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [pro,setpro]=useState({});\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/users/login`, formData);\r\n      console.log('User logged in:', response.data);\r\n\r\n      // Assuming server sends back a JWT token in response.data.token\r\n      const token = response.data.token;\r\n\r\n      // Use the login function from AuthContext to handle token and user state\r\n      await login(token);\r\n\r\n      // Redirect user based on their role\r\n      const pro=response.data.user.profession;\r\n      setpro(pro);\r\n      console.log('Role received:', pro); // Log the role received from the server\r\n      switch (response.data.user.profession) { // Ensure lowercase comparison for consistent checks\r\n        case 'founder':\r\n          navigate('/AllStartups');\r\n          break;\r\n        case 'investor':\r\n          navigate('/AllInvestors');\r\n          break;\r\n        case 'visitor':\r\n          navigate('/VisitorDashboard');\r\n          break;\r\n        default:\r\n          console.error('Unknown Role:', response.data.role); // Log the unknown role for further investigation\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}