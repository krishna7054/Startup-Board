{"ast":null,"code":"var _jsxFileName = \"D:\\\\startup-board\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/users/login', formData);\n      console.log('User logged in:', response.data);\n\n      // Assuming server sends back a JWT token in response.data.token\n      const token = response.data.token;\n\n      // Store the token in local storage\n      localStorage.setItem('token', token);\n\n      // Navigate to /dashboard\n      navigate('/dashboard');\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: formData.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"J79ccTyvB9Ws2FCIUe6WyNTjHnU=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","formData","setFormData","email","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","console","log","data","token","localStorage","setItem","error","onSubmit","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/startup-board/frontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginPage = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/users/login', formData);\r\n      console.log('User logged in:', response.data);\r\n\r\n      // Assuming server sends back a JWT token in response.data.token\r\n      const token = response.data.token;\r\n\r\n      // Store the token in local storage\r\n      localStorage.setItem('token', token);\r\n\r\n      // Navigate to /dashboard\r\n      navigate('/dashboard');\r\n    } catch (error) {\r\n      console.error('Error logging in:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='bg-black'>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"Email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IAAES,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrE,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,kBAAkB,EAAEb,QAAQ,CAAC;MAC/Dc,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAE7C;MACA,MAAMC,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACC,KAAK;;MAEjC;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;MAEpC;MACAb,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC;EAED,oBACEvB,OAAA;IAAMwB,QAAQ,EAAEX,YAAa;IAACY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAChD1B,OAAA;MACE2B,IAAI,EAAC,OAAO;MACZhB,IAAI,EAAC,OAAO;MACZiB,WAAW,EAAC,OAAO;MACnBhB,KAAK,EAAET,QAAQ,CAACE,KAAM;MACtBwB,QAAQ,EAAErB;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFjC,OAAA;MACE2B,IAAI,EAAC,UAAU;MACfhB,IAAI,EAAC,UAAU;MACfiB,WAAW,EAAC,UAAU;MACtBhB,KAAK,EAAET,QAAQ,CAACG,QAAS;MACzBuB,QAAQ,EAAErB;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFjC,OAAA;MAAQ2B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CA9CID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAAoC,EAAA,GAFxBjC,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}