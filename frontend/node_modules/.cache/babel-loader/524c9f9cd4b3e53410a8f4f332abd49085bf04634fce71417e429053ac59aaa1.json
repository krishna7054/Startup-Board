{"ast":null,"code":"// blogService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/blogs/'; // Replace with your backend URL\n\n// Helper function to get authorization token from localStorage or wherever you store it\nconst getAuthToken = () => {\n  return localStorage.getItem('token'); // Adjust this based on where you store your token\n};\nexport const getBlogs = async () => {\n  const response = await axios.get(API_URL, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`\n    }\n  });\n  return response.data;\n};\nexport const getBlogById = async id => {\n  const response = await axios.get(`${API_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`\n    }\n  });\n  return response.data;\n};\nexport const addBlog = async blogData => {\n  const response = await axios.post(API_URL, blogData, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return response.data;\n};\nexport const updateBlog = async (id, blogData) => {\n  const response = await axios.patch(`${API_URL}/${id}`, blogData, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  return response.data;\n};\nexport const deleteBlog = async id => {\n  const response = await axios.delete(`${API_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`\n    }\n  });\n  return response.data;\n};\nexport const likeBlog = async blogId => {\n  const response = await axios.post(`${API_URL}${blogId}/like`, {\n    headers: {\n      Authorization: `Bearer ${getAuthToken()}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getAuthToken","localStorage","getItem","getBlogs","response","get","headers","Authorization","data","getBlogById","id","addBlog","blogData","post","updateBlog","patch","deleteBlog","delete","likeBlog","blogId"],"sources":["D:/startup-board/frontend/src/services/blogService.js"],"sourcesContent":["// blogService.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/blogs/'; // Replace with your backend URL\r\n\r\n// Helper function to get authorization token from localStorage or wherever you store it\r\nconst getAuthToken = () => {\r\n  return localStorage.getItem('token'); // Adjust this based on where you store your token\r\n};\r\n\r\nexport const getBlogs = async () => {\r\n  const response = await axios.get(API_URL, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const getBlogById = async (id) => {\r\n  const response = await axios.get(`${API_URL}/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const addBlog = async (blogData) => {\r\n  const response = await axios.post(API_URL, blogData, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const updateBlog = async (id, blogData) => {\r\n  const response = await axios.patch(`${API_URL}/${id}`, blogData, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteBlog = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const likeBlog = async (blogId) => {\r\n  const response = await axios.post(`${API_URL}${blogId}/like`, {\r\n    headers: {\r\n      Authorization: `Bearer ${getAuthToken()}`\r\n    }\r\n  });\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,8BAA8B,CAAC,CAAC;;AAEhD;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAACN,OAAO,EAAE;IACxCO,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,IAAIW,EAAE,EAAE,EAAE;IACnDJ,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAACd,OAAO,EAAEa,QAAQ,EAAE;IACnDN,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC,EAAE;MACzC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;EAChD,MAAMR,QAAQ,GAAG,MAAMN,KAAK,CAACiB,KAAK,CAAC,GAAGhB,OAAO,IAAIW,EAAE,EAAE,EAAEE,QAAQ,EAAE;IAC/DN,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC,EAAE;MACzC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAON,EAAE,IAAK;EACtC,MAAMN,QAAQ,GAAG,MAAMN,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,IAAIW,EAAE,EAAE,EAAE;IACtDJ,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,QAAQ,GAAG,MAAOC,MAAM,IAAK;EACxC,MAAMf,QAAQ,GAAG,MAAMN,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,GAAGoB,MAAM,OAAO,EAAE;IAC5Db,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUP,YAAY,CAAC,CAAC;IACzC;EACF,CAAC,CAAC;EACF,OAAOI,QAAQ,CAACI,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}